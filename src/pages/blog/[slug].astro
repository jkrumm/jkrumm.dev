---
import { getCollection } from 'astro:content';
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import PageLayout from '@layouts/PageLayout.astro';
import { getArticleSchema } from '../../structuredData';
import { blogWebsite } from '../../structuredData';
import { PERSON } from '@constants';
 
interface Props {
  post: CollectionEntry<'blog'>;
}
 
export async function getStaticPaths() {
  const blogPosts = await getCollection('blog');
  return blogPosts.map((post) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}
const { post } = Astro.props;
const { Content } = await post.render();

const articleStructuredData = getArticleSchema(post);
 
const breadcrumbsStructuredData = {
  '@context': 'https://schema.org',
  '@type': 'BreadcrumbList',
  itemListElement: [
    {
      '@type': 'ListItem',
      position: 1,
      name: 'Blog',
      item: `${PERSON.url}/blog/`,
    },
    {
      '@type': 'ListItem',
      position: 2,
      name: post.data.title,
      item: `${PERSON.url}/blog/${post.slug}/`,
    },
  ],
};
 
const jsonLd = {
  '@context': 'https://schema.org',
  '@graph': [articleStructuredData, breadcrumbsStructuredData, blogWebsite],
};

---
 
<PageLayout title={post.data.title} description={post.data.excerpt}>
  <script type="application/ld+json" set:html={JSON.stringify(jsonLd)} />
  <div>
    <article class="prose dark:prose-invert">
      <Image
        src={post.data.cover}
        alt={post.data.title}
        class="object-cover object-center !m-0 aspect-square block"
        width={600}
        height={600}
      />
      <h1 class="md:!text-5xl md:!leading-[1.2]">{post.data.title}</h1>
      <p class="lead">{post.data.excerpt}</p>
      <div>
        <Content />
      </div>
    </article>
  </div>
</PageLayout>